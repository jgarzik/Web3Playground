Build a web3 app using React and Vite called playground. I am a developer with the Hemi evm blockchain, and this is where I share interfaces to small smart contracts that I have written related to the Hemi blockchain.

The app features a familiar connect wallet function in the upper right corner, where the user may connect their metamask or wallet connect V2 EVM wallets. This app works exclusively with the Hemi chain (chainID 43111), not the Main ethereum network.

The main landing page features a number of cards, which the user can click on. these take the user to a page dedicated to the subject of which the card is referring to

Page #1, WENTGE NF T
The first card, and also the first sub page, is “WENTGE NFT”.  When the user clicks on a card of that name on The Landing page, they are taken to the WENTGE page. This page has two functions:
1.1: View WENTGE NFTs held by the connected wallet address
1.2: A button “Mint”, which calls the WENTGE NFT mint function.  This is a freely mintable NFT, so no other details are required of the user.  This function MUST create a transaction on the Hemi chain (43111), not the Ethereum chain.  WENTGE only exists on Hemi.

WENTGE NFT is deployed on the Hemi chain at 0x005E2c2a327cEBE03409221cb37Abf4911AFF791.  The source code and ABI information is attached as WenTgeNft.sol.  Analyze WenTgeNft.sol when writing the code for this page.

WINTGE is freely mintable however the smart contract only permits one NFT per address (thus the blockchain will prevent the user from creating two mint transactions, rejecting the 2nd as invalid)


Page #2: Foom NFT
The second card, and the second sub page, is foom nft. when the user clicks on a card of that name on The Landing page, they are taken to the Foom page.   this page has three functions:
 2.1: view foom nfts held by the connected wallet address
 2.2: display the wallet balances of two hemi-specific tokens: HAIR and MAX
 2.3: a button mint, which calls the foom nft function.  this is a rather complicated operation that goes through multiple stages:
Read the fee information from the smart contract, HAIR_TKN_FEE and MAX_TKN_FEE
Verify that the user has HAIR_TKN_FEE of HAIR tokens, and MAX_TKN_FEE of MAX tokens in their wallet.
Verify that the foom nft contract has approval to spend HAIR_TKN_FEE worth of the user’s HAIR tokens.  If not, trigger an approval transaction to the blockchain, and wait for its success.
Verify that the foom nft contract has approval to spend MAX_TKN_FEE worth of the user’s MAX tokens.  If not, trigger an approval transaction to the blockchain, and wait for its success.
Call the foom nft mint function, to mint the nft (burning HAIR and MAX tokens as the cost of minting)

The foom nft is deployed on the Hemi chain at address 0xc519C8bf8952325340e29415FfFa3F675e14bcD3. The source code and ABI information is attached as Foom.sol. Analyze Foom.sol when writing the code for this page.

That’s all for the app!  Just two cards/pages beyond the landing page, for now.

Other notes:
Create a nice, clean, minimal, web3 centric UI design with helpful explanations for new users
Write modular, well organized, well-commented code that focuses on the “many small functions” approach.  Large functions are disliked.  All files must include top of header and per-function explanation comments.


